1.中间件
	从概念上讲，中间件是一种功能的封装方式，具体来说就是封装在程序中处理HTTP请求的功能。
	从实战上讲，中间件只是一个有3个参数的函数：一个请求对象、一个响应对象和一个next函数。
	中间件是在管道中执行的，在Express程序中，通过调用app.use向管道中插入中间件。

	请求在管道中如何“终止”呢？这是由传给每个中间件的next函数来实现的，如果不调用next(),
	请求就在那个中间件中终止了。

2.中间件和路由处理器
	（1）路由处理器（app.get，app.post等，经常被统称为app.VERB）可以被看作只处理特定
	HTTP谓词(GET/POST)的中间件
	（2）路由处理器的第一个参数必须是路径。如果你想让某个路由匹配所有路径,只需用 /*。
	 中间件也可以将路径作为第一个参数,但它是可选的(如果忽略这个参数,它会匹配所 有路径,
	 就像指定了 /\* 一样)。
	 (3)路由处理器和中间件的参数中都有回调函数,这个函数有 2 个、3 个或 4 个参数
	 (从技 术上讲也可以有 0 或 1 个参数,但这些形式没有意义)。
	 如果有 2 个或 3 个参数,头两 个参数是请求和响应对象,第三个参数是 next 函数。
	 如果有 4 个参数,它就变成了错 误处理中间件,第一个参数变成了错误对象,
	 然后依次是请求、响应和 next 对象。
	 (4)如果不调用 next(),管道就会被终止,也不会再有处理器或中间件做后续处理。
	 如果 你不调用 next(),则应该发送一个响应到客户端(res.send、res.json、res.render 等);
	  如果你不这样做,客户端会被挂起并最终导致超时。
	 (5)如果调用了 next(),一般不宜再发送响应到客户端。如果你发送了,
	 管道中后续的中 间件或路由处理器还会执行,但它们发送的任何响应都会被忽略。
